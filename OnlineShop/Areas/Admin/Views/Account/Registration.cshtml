@model OnlineShop.Areas.Admin.Model.UserModel
@{
    ViewBag.Title = "Registration";
    Layout = "~/Areas/Admin/Views/Shared/_LoginAndRegistration.cshtml";
}

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    <div>
        <div class="alert alert-success" role="alert">
            <span>Thành công! </span>@ViewBag.Message
        </div>
    </div>
}
else
{
    <div class="card shadow rounded-0 overflow-hidden">
        <div class="row g-0">
            <div class="col-lg-6 bg-login d-flex align-items-center justify-content-center">
                <img src="~/assets/admin/images/error/login-img.jpg" class="img-fluid" alt="">
            </div>
            <div class="col-lg-6">
                <div class="card-body p-4 p-sm-4">
                    <h5 class="card-title  mb-4">Đăng ký</h5>

                    @using (Html.BeginForm())
                    {
                        <div>
                            <div class="d-grid">
                                <a class="btn btn-white radius-30" href="javascript:;">
                                    <span class="d-flex justify-content-center align-items-center">
                                        <img class="me-2" src="~/assets/admin/images/icons/search.svg" width="16" alt="">
                                        <span>Đăng ký với tài khoản Google</span>
                                    </span>
                                </a>
                            </div>
                        </div>
                        <div class="login-separater text-center mb-4">
                            <hr>
                        </div>

                        @Html.AntiForgeryToken()

                        <div class="row g-3">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="col-12">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
                                <div class="ms-auto position-relative">
                                    <div class="position-absolute top-50 translate-middle-y search-icon px-3"><i class="bi bi-person-circle"></i></div>
                                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control radius-30 ps-5" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger invalid-feedback d-block" })
                                </div>
                            </div>

                            <div class="col-12">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                                <div class="ms-auto position-relative">
                                    <div class="position-absolute top-50 translate-middle-y search-icon px-3"><i class="bi bi-envelope-fill"></i></div>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control radius-30 ps-5" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger invalid-feedback d-block" })
                                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger invalid-feedback d-block" })
                                </div>
                            </div>

                            <div class="col-12">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                                <div class="ms-auto position-relative">
                                    <div class="position-absolute top-50 translate-middle-y search-icon px-3"><i class="bi bi-lock-fill"></i></div>
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control radius-30 ps-5" })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger invalid-feedback d-block" })
                                </div>
                            </div>

                            <div class="col-12">
                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                                <div class="ms-auto position-relative">
                                    <div class="position-absolute top-50 translate-middle-y search-icon px-3"><i class="bi bi-lock-fill"></i></div>
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control radius-30 ps-5" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger invalid-feedback d-block" })
                                </div>
                            </div>


                            <div class="col-12">
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary radius-30">Đăng ký</button>
                                </div>
                            </div>
                            <div class="col-12">
                                <p class="mb-0">Bạn đã có tải khoản? @Html.ActionLink("Đăng nhập tại đây.", "Login", "Account")</p>
                            </div>
                        </div>

                        if (ViewBag.Message != null)
                        {
                            <div>
                                <div class="alert alert-danger" role="alert">
                                    <span>Thất bại! </span>@ViewBag.Message
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>



}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


